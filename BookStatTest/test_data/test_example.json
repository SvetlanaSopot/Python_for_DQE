{
  "tests": [
    {
      "name": "Check table 'BOOKSINFO' for data existing",
      "query": "SELECT count(*) FROM BOOKSINFO",
      "expected": 1
    },
    {
      "name": "Check table 'BOOKSINFO' for data duplicate",
      "query": "SELECT COUNT (*) FROM (SELECT count(*) FROM BOOKSINFO GROUP BY book_name HAVING count(*) > 1)",
      "expected": 0
    },
    {
      "name": "Check table 'Example' for data existing",
      "query": "SELECT count(*) FROM Example",
      "expected": 13095
    },
    {
      "name": "Check table 'BOOKSINFO' for the absence of NULL values in the fields",
      "query": "SELECT count(*) FROM BOOKSINFO where book_name is null or number_of_letters is null or number_of_paragraph is null or number_of_words is null or words_in_lowercase is null or words_with_capital_letters is null",

      "expected": 0
    },
    {
      "name": "Check table 'Example' for the absence of NULL values in the fields",
      "query": "SELECT count(*) FROM Example where word is null or count is null or count_uppercase is null",
      "expected": 0
    },
    {
      "name": "Check table 'Example' for data duplicate",
      "query": "SELECT COUNT (*) FROM (SELECT count(*) FROM Example GROUP BY word HAVING count(*) > 1)",
      "expected": 0
    },
    {
      "name": "Check table 'Check the requarement - number of created tables",
      "query": "select t2 - t1 from \n(select count(book_name) as t1 from BOOKSINFO),\n(select count(name) as t2 from sqlite_master where type = 'table')",
      "expected": 1
    },
    {
      "name": "Requirement checking - compliance of data types with requirements (BOKSINFO tables type 'text' checking)",
      "query": "select count(*) from pragma_table_info(\"BOOKSINFO\")\nwhere type = 'text'",
      "expected": 1
    },
    {
      "name": "Requirement checking - compliance of data types with requirements (BOOKSINFO table type INT checking)",
      "query": "select count(*) from pragma_table_info(\"BOOKSINFO\")\nwhere type = 'INT'",
      "expected": 5
    },
    {
      "name": "Check number of columns in the \"Example\" table",
      "query": "select count(name) from pragma_table_info(\"Example\")",
      "expected": 3
    },
    {
      "name": "Check number of columns in the \"BOOKSINFO\" table",
      "query": "select count(name) from pragma_table_info(\"BOOKSINFO\")",
      "expected": 6
    },
    {
      "name": "Data correctness verification in the \"Example\" table",
      "query": "select count(*) from \"Example\"\nwhere word like '%0%' or word like '%1%' or word like '%2%' or word like '%3%'  or word like '%4%'\nor word like '%5%' or word like '%6%' or word like '%7%' or word like '%8%'  or word like '%9%'",
      "expected": 0
    },
    {
      "name": "Data logic checking in the \"BOOKSINFO\" table",
      "query": "select sum(delta) from \n(select case when number_of_paragraph > number_of_words or \nnumber_of_words > number_of_letters then 1 else 0 end as delta\nfrom \"BOOKSINFO\")",
      "expected": 0
    }

  ]
}